use utf8;
use strict;
use warnings;
use open qw( :encoding(UTF-8) :std );
use Test::More tests => 66;
use Lingua::Stem::Patch::EO qw( stem );

is stem('mi'),         'mi',     'personal pronoun';
is stem('min'),        'mi',     '-n accusative personal pronoun';
is stem('mia'),        'mia',    '-a possesive adjective';
is stem('miaj'),       'mia',    '-aj plural possesive adjective';
is stem('mian'),       'mia',    '-an accusative possesive adjective';
is stem('miajn'),      'mia',    '-ajn accusative plural possesive adjective';
is stem('hundo'),      'hundo',  '-o noun';
is stem('hundoj'),     'hundo',  '-oj plural noun';
is stem('hundon'),     'hundo',  '-on accusative noun';
is stem('hundojn'),    'hundo',  '-ojn accusative plural noun';
is stem('longa'),      'longa',  '-a adjective';
is stem('longaj'),     'longa',  '-aj plural adjective';
is stem('longan'),     'longa',  '-an accusative adjective';
is stem('longajn'),    'longa',  '-ajn accusative plural adjective';
is stem('labori'),     'labori', '-i infinitive verb';
is stem('laboris'),    'labori', '-is past indicative verb';
is stem('laboras'),    'labori', '-as present indicative verb';
is stem('laboros'),    'labori', '-os future indicative verb';
is stem('laborus'),    'labori', '-us conditional verb';
is stem('laboru'),     'labori', '-u jussive verb';
is stem('laborinti'),  'labori', '-inti';
is stem('laboranti'),  'labori', '-anti';
is stem('laboronti'),  'labori', '-onti';
is stem('laboriti'),   'labori', '-iti';
is stem('laborati'),   'labori', '-ati';
is stem('laboroti'),   'labori', '-oti';
is stem('laborintis'), 'labori', '-intis';
is stem('laborantis'), 'labori', '-antis';
is stem('laborontis'), 'labori', '-ontis';
is stem('laboritis'),  'labori', '-itis';
is stem('laboratis'),  'labori', '-atis';
is stem('laborotis'),  'labori', '-otis';
is stem('laborintas'), 'labori', '-intas';
is stem('laborantas'), 'labori', '-antas';
is stem('laborontas'), 'labori', '-ontas';
is stem('laboritas'),  'labori', '-itas';
is stem('laboratas'),  'labori', '-atas';
is stem('laborotas'),  'labori', '-otas';
is stem('laborintos'), 'labori', '-intos';
is stem('laborantos'), 'labori', '-antos';
is stem('laborontos'), 'labori', '-ontos';
is stem('laboritos'),  'labori', '-itos';
is stem('laboratos'),  'labori', '-atos';
is stem('laborotos'),  'labori', '-otos';
is stem('laborintus'), 'labori', '-intus';
is stem('laborantus'), 'labori', '-antus';
is stem('laborontus'), 'labori', '-ontus';
is stem('laboritus'),  'labori', '-itus';
is stem('laboratus'),  'labori', '-atus';
is stem('laborotus'),  'labori', '-otus';
is stem('laborintu'),  'labori', '-intu';
is stem('laborantu'),  'labori', '-antu';
is stem('laborontu'),  'labori', '-ontu';
is stem('laboritu'),   'labori', '-itu';
is stem('laboratu'),   'labori', '-atu';
is stem('laborotu'),   'labori', '-otu';
is stem('laborinte'),  'labori', '-inte';
is stem('laborante'),  'labori', '-ante';
is stem('laboronte'),  'labori', '-onte';
is stem('laborite'),   'labori', '-ite';
is stem('laborate'),   'labori', '-ate';
is stem('laborote'),   'labori', '-ote';
is stem('hund’'),      'hundo',  '-’ noun with typographic apostrophe';
is stem("hund'"),      'hundo',  "-' noun with typewriter apostrophe";
is stem('un’'),        'unu',    '-’ unu with typographic apostrophe';
is stem("un'"),        'unu',    "-' unu with typewriter apostrophe";
